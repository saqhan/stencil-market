/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MarketAppInterface, } from "./components/group-a/res/view/s-cnt-market-first-page/res/view/s-cnt-market-app/res/interface/common.interface";
import { MarketChoiceInterface, } from "./components/group-a/res/view/s-cnt-market-first-page/res/view/s-cnt-market-choice/res/interface/common.interface";
import { MarketCourierInterface, } from "./components/group-a/res/view/s-cnt-market-first-page/res/view/s-cnt-market-courier/res/interface/common.interface";
import { MarketDeliveryInterface, } from "./components/group-a/res/view/s-cnt-market-first-page/res/view/s-cnt-market-delivery/res/interface/common.interface";
import { MarketOfferInterface, } from "./components/group-a/res/view/s-cnt-market-first-page/res/view/s-cnt-market-offer/res/interface/common.interface";
import { MarketRecommendedInterface, } from "./components/group-a/res/view/s-cnt-market-modal-window/res/view/s-cnt-market-recommended/res/view/s-cnt-market-item-recommended/res/interface/common.interface";
import { MarketSelectionInterface, } from "./components/group-a/res/view/s-cnt-market-first-page/res/view/s-cnt-market-selection/res/interface/common.interface";
import { MarketStatisticsInterface, } from "./components/group-a/res/view/s-cnt-market-first-page/res/view/s-cnt-market-statistics/res/interface/common.interface";
import { MarketProductInterface, } from "./components/group-a/res/view/s-cnt-market-modal-window/res/view/s-cnt-market-product/res/interface/common.interface";
import { MarketProductListInterface, } from "./components/group-a/res/view/s-cnt-market-shop/res/view/s-cnt-market-products-list/res/interface/common.interface";
import { MarketCardInterface, } from "./components/group-a/res/view/s-cnt-market-shop/res/view/s-cnt-market-products-list/res/view/s-cnt-market-products-list-card/res/view/s-cnt-market-products-list-item/res/interface/common.interface";
import { MarketProductsSliderCardsInterface, } from "./components/group-a/res/view/s-cnt-market-shop/res/view/s-cnt-market-products-slider/res/interface/common.interface";
import { MarketPromoSliderInterface, } from "./components/group-a/res/view/s-cnt-market-shop/res/view/s-cnt-market-promo-slider/res/interface/common.interface";
import { MarketSpecialistInterface, } from "./components/group-a/res/view/s-cnt-market-first-page/res/view/s-cnt-market-specialist/res/interface/common.interface";
import { MarketSpecificationInterface, } from "./components/group-a/res/view/s-cnt-market-modal-window/res/view/s-cnt-market-specification/res/interface/common.interface";
export namespace Components {
    interface GroupA {
    }
    interface GroupB {
    }
    interface MyComponent {
    }
    interface SCntMarketApp {
        /**
          * Данные для компонента app
         */
        "forApp": MarketAppInterface[];
    }
    interface SCntMarketChoice {
        /**
          * Данные для заголовка
         */
        "choiceTitleText": string;
        /**
          * Данные для компонента Choice
         */
        "forChoice": MarketChoiceInterface[];
    }
    interface SCntMarketCourier {
        /**
          * Данные для компонента Choice
         */
        "forCourier": MarketCourierInterface[];
    }
    interface SCntMarketDelivery {
        /**
          * Данные для картинки
         */
        "deliveryImage": string;
        /**
          * Данные для заголовка
         */
        "deliveryTitleText": string;
        /**
          * Данные для компонента delivery
         */
        "forDelivery": MarketDeliveryInterface[];
    }
    interface SCntMarketFirstPage {
    }
    interface SCntMarketFooter {
    }
    interface SCntMarketHeader {
    }
    interface SCntMarketItemOffer {
        /**
          * Данные для компонента Item Offer
         */
        "forOffer": MarketOfferInterface;
    }
    interface SCntMarketItemRecommended {
        "MarketRecommendedInterface": MarketRecommendedInterface[];
        /**
          * Данные для Item-Recommended
         */
        "getRecommended": any;
    }
    interface SCntMarketItemSelection {
        /**
          * Данные для карточек магазинов
         */
        "forSelection": MarketSelectionInterface;
    }
    interface SCntMarketItemStatistics {
        /**
          * Данные для компонента Statistics
         */
        "forStatistics": MarketStatisticsInterface;
    }
    interface SCntMarketModalWindow {
    }
    interface SCntMarketOffer {
        /**
          * Данные для компонента Offer
         */
        "forOffer": MarketOfferInterface[];
        /**
          * Данные для заголовка
         */
        "offerTitleText": string;
    }
    interface SCntMarketProduct {
        /**
          * Данные для Product
         */
        "getProduct": MarketProductInterface;
    }
    interface SCntMarketProductsList {
        /**
          * Данные для списка товаров
         */
        "productsList": MarketProductListInterface[];
    }
    interface SCntMarketProductsListCard {
        /**
          * Данные для списка товаров
         */
        "productsList": MarketProductListInterface;
    }
    interface SCntMarketProductsListItem {
        /**
          * Данные для карточки товара
         */
        "productsListCard": MarketCardInterface;
    }
    interface SCntMarketProductsSlider {
        /**
          * Данные карточек слайдера популярных продуктов
         */
        "productsSliderCards": MarketProductsSliderCardsInterface[];
        /**
          * Заголовк слайдера
         */
        "productsSliderTitle": string;
    }
    interface SCntMarketProductsSliderCard {
        /**
          * Получаем данные карточек слайдера популярных продуктов
         */
        "productsSliderCards": MarketProductsSliderCardsInterface;
    }
    interface SCntMarketPromoSlider {
        /**
          * Получаем данные карточек промо-слайдера
         */
        "promoSliderCards": MarketPromoSliderInterface[];
    }
    interface SCntMarketPromoSliderCard {
        /**
          * Получаем данные карточек промо-слайдера
         */
        "promoSliderCards": MarketPromoSliderInterface;
    }
    interface SCntMarketRecentlyWatched {
        /**
          * Данные карточек слайдера просмотренных товаров
         */
        "recentlyWatchedProducts": any;
        /**
          * Заголовк раздела
         */
        "recentlyWatchedTitle": string;
    }
    interface SCntMarketRecentlyWatchedCard {
        /**
          * Данные карточек слайдера просмотренных товаров
         */
        "recentlyWatchedProducts": any;
    }
    interface SCntMarketRecommended {
        /**
          * Данные для Recommended
         */
        "getRecommended": MarketRecommendedInterface[];
        "info": string;
    }
    interface SCntMarketSelection {
        /**
          * Данные для карточек магазинов
         */
        "forSelection": MarketSelectionInterface[];
        /**
          * Данные для главной картинки
         */
        "homePageImage": string;
        /**
          * Данные для подзаголовка на картинке
         */
        "homeSubText": string;
        /**
          * Данные для заголовка на картинке
         */
        "homeText": string;
    }
    interface SCntMarketShop {
    }
    interface SCntMarketSpecialist {
        /**
          * Данные для компонента Specialist
         */
        "forSpecialist": MarketSpecialistInterface[];
    }
    interface SCntMarketSpecification {
        /**
          * Интерфейс для Specification
         */
        "MarketSpecificationInterface": MarketSpecificationInterface[];
        /**
          * Данные для Specification
         */
        "getSpecification": any;
    }
    interface SCntMarketStatistics {
        /**
          * Данные для компонента Statistics
         */
        "forStatistics": MarketStatisticsInterface[];
    }
    interface SCntMarketUpFooter {
    }
}
declare global {
    interface HTMLGroupAElement extends Components.GroupA, HTMLStencilElement {
    }
    var HTMLGroupAElement: {
        prototype: HTMLGroupAElement;
        new (): HTMLGroupAElement;
    };
    interface HTMLGroupBElement extends Components.GroupB, HTMLStencilElement {
    }
    var HTMLGroupBElement: {
        prototype: HTMLGroupBElement;
        new (): HTMLGroupBElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLSCntMarketAppElement extends Components.SCntMarketApp, HTMLStencilElement {
    }
    var HTMLSCntMarketAppElement: {
        prototype: HTMLSCntMarketAppElement;
        new (): HTMLSCntMarketAppElement;
    };
    interface HTMLSCntMarketChoiceElement extends Components.SCntMarketChoice, HTMLStencilElement {
    }
    var HTMLSCntMarketChoiceElement: {
        prototype: HTMLSCntMarketChoiceElement;
        new (): HTMLSCntMarketChoiceElement;
    };
    interface HTMLSCntMarketCourierElement extends Components.SCntMarketCourier, HTMLStencilElement {
    }
    var HTMLSCntMarketCourierElement: {
        prototype: HTMLSCntMarketCourierElement;
        new (): HTMLSCntMarketCourierElement;
    };
    interface HTMLSCntMarketDeliveryElement extends Components.SCntMarketDelivery, HTMLStencilElement {
    }
    var HTMLSCntMarketDeliveryElement: {
        prototype: HTMLSCntMarketDeliveryElement;
        new (): HTMLSCntMarketDeliveryElement;
    };
    interface HTMLSCntMarketFirstPageElement extends Components.SCntMarketFirstPage, HTMLStencilElement {
    }
    var HTMLSCntMarketFirstPageElement: {
        prototype: HTMLSCntMarketFirstPageElement;
        new (): HTMLSCntMarketFirstPageElement;
    };
    interface HTMLSCntMarketFooterElement extends Components.SCntMarketFooter, HTMLStencilElement {
    }
    var HTMLSCntMarketFooterElement: {
        prototype: HTMLSCntMarketFooterElement;
        new (): HTMLSCntMarketFooterElement;
    };
    interface HTMLSCntMarketHeaderElement extends Components.SCntMarketHeader, HTMLStencilElement {
    }
    var HTMLSCntMarketHeaderElement: {
        prototype: HTMLSCntMarketHeaderElement;
        new (): HTMLSCntMarketHeaderElement;
    };
    interface HTMLSCntMarketItemOfferElement extends Components.SCntMarketItemOffer, HTMLStencilElement {
    }
    var HTMLSCntMarketItemOfferElement: {
        prototype: HTMLSCntMarketItemOfferElement;
        new (): HTMLSCntMarketItemOfferElement;
    };
    interface HTMLSCntMarketItemRecommendedElement extends Components.SCntMarketItemRecommended, HTMLStencilElement {
    }
    var HTMLSCntMarketItemRecommendedElement: {
        prototype: HTMLSCntMarketItemRecommendedElement;
        new (): HTMLSCntMarketItemRecommendedElement;
    };
    interface HTMLSCntMarketItemSelectionElement extends Components.SCntMarketItemSelection, HTMLStencilElement {
    }
    var HTMLSCntMarketItemSelectionElement: {
        prototype: HTMLSCntMarketItemSelectionElement;
        new (): HTMLSCntMarketItemSelectionElement;
    };
    interface HTMLSCntMarketItemStatisticsElement extends Components.SCntMarketItemStatistics, HTMLStencilElement {
    }
    var HTMLSCntMarketItemStatisticsElement: {
        prototype: HTMLSCntMarketItemStatisticsElement;
        new (): HTMLSCntMarketItemStatisticsElement;
    };
    interface HTMLSCntMarketModalWindowElement extends Components.SCntMarketModalWindow, HTMLStencilElement {
    }
    var HTMLSCntMarketModalWindowElement: {
        prototype: HTMLSCntMarketModalWindowElement;
        new (): HTMLSCntMarketModalWindowElement;
    };
    interface HTMLSCntMarketOfferElement extends Components.SCntMarketOffer, HTMLStencilElement {
    }
    var HTMLSCntMarketOfferElement: {
        prototype: HTMLSCntMarketOfferElement;
        new (): HTMLSCntMarketOfferElement;
    };
    interface HTMLSCntMarketProductElement extends Components.SCntMarketProduct, HTMLStencilElement {
    }
    var HTMLSCntMarketProductElement: {
        prototype: HTMLSCntMarketProductElement;
        new (): HTMLSCntMarketProductElement;
    };
    interface HTMLSCntMarketProductsListElement extends Components.SCntMarketProductsList, HTMLStencilElement {
    }
    var HTMLSCntMarketProductsListElement: {
        prototype: HTMLSCntMarketProductsListElement;
        new (): HTMLSCntMarketProductsListElement;
    };
    interface HTMLSCntMarketProductsListCardElement extends Components.SCntMarketProductsListCard, HTMLStencilElement {
    }
    var HTMLSCntMarketProductsListCardElement: {
        prototype: HTMLSCntMarketProductsListCardElement;
        new (): HTMLSCntMarketProductsListCardElement;
    };
    interface HTMLSCntMarketProductsListItemElement extends Components.SCntMarketProductsListItem, HTMLStencilElement {
    }
    var HTMLSCntMarketProductsListItemElement: {
        prototype: HTMLSCntMarketProductsListItemElement;
        new (): HTMLSCntMarketProductsListItemElement;
    };
    interface HTMLSCntMarketProductsSliderElement extends Components.SCntMarketProductsSlider, HTMLStencilElement {
    }
    var HTMLSCntMarketProductsSliderElement: {
        prototype: HTMLSCntMarketProductsSliderElement;
        new (): HTMLSCntMarketProductsSliderElement;
    };
    interface HTMLSCntMarketProductsSliderCardElement extends Components.SCntMarketProductsSliderCard, HTMLStencilElement {
    }
    var HTMLSCntMarketProductsSliderCardElement: {
        prototype: HTMLSCntMarketProductsSliderCardElement;
        new (): HTMLSCntMarketProductsSliderCardElement;
    };
    interface HTMLSCntMarketPromoSliderElement extends Components.SCntMarketPromoSlider, HTMLStencilElement {
    }
    var HTMLSCntMarketPromoSliderElement: {
        prototype: HTMLSCntMarketPromoSliderElement;
        new (): HTMLSCntMarketPromoSliderElement;
    };
    interface HTMLSCntMarketPromoSliderCardElement extends Components.SCntMarketPromoSliderCard, HTMLStencilElement {
    }
    var HTMLSCntMarketPromoSliderCardElement: {
        prototype: HTMLSCntMarketPromoSliderCardElement;
        new (): HTMLSCntMarketPromoSliderCardElement;
    };
    interface HTMLSCntMarketRecentlyWatchedElement extends Components.SCntMarketRecentlyWatched, HTMLStencilElement {
    }
    var HTMLSCntMarketRecentlyWatchedElement: {
        prototype: HTMLSCntMarketRecentlyWatchedElement;
        new (): HTMLSCntMarketRecentlyWatchedElement;
    };
    interface HTMLSCntMarketRecentlyWatchedCardElement extends Components.SCntMarketRecentlyWatchedCard, HTMLStencilElement {
    }
    var HTMLSCntMarketRecentlyWatchedCardElement: {
        prototype: HTMLSCntMarketRecentlyWatchedCardElement;
        new (): HTMLSCntMarketRecentlyWatchedCardElement;
    };
    interface HTMLSCntMarketRecommendedElement extends Components.SCntMarketRecommended, HTMLStencilElement {
    }
    var HTMLSCntMarketRecommendedElement: {
        prototype: HTMLSCntMarketRecommendedElement;
        new (): HTMLSCntMarketRecommendedElement;
    };
    interface HTMLSCntMarketSelectionElement extends Components.SCntMarketSelection, HTMLStencilElement {
    }
    var HTMLSCntMarketSelectionElement: {
        prototype: HTMLSCntMarketSelectionElement;
        new (): HTMLSCntMarketSelectionElement;
    };
    interface HTMLSCntMarketShopElement extends Components.SCntMarketShop, HTMLStencilElement {
    }
    var HTMLSCntMarketShopElement: {
        prototype: HTMLSCntMarketShopElement;
        new (): HTMLSCntMarketShopElement;
    };
    interface HTMLSCntMarketSpecialistElement extends Components.SCntMarketSpecialist, HTMLStencilElement {
    }
    var HTMLSCntMarketSpecialistElement: {
        prototype: HTMLSCntMarketSpecialistElement;
        new (): HTMLSCntMarketSpecialistElement;
    };
    interface HTMLSCntMarketSpecificationElement extends Components.SCntMarketSpecification, HTMLStencilElement {
    }
    var HTMLSCntMarketSpecificationElement: {
        prototype: HTMLSCntMarketSpecificationElement;
        new (): HTMLSCntMarketSpecificationElement;
    };
    interface HTMLSCntMarketStatisticsElement extends Components.SCntMarketStatistics, HTMLStencilElement {
    }
    var HTMLSCntMarketStatisticsElement: {
        prototype: HTMLSCntMarketStatisticsElement;
        new (): HTMLSCntMarketStatisticsElement;
    };
    interface HTMLSCntMarketUpFooterElement extends Components.SCntMarketUpFooter, HTMLStencilElement {
    }
    var HTMLSCntMarketUpFooterElement: {
        prototype: HTMLSCntMarketUpFooterElement;
        new (): HTMLSCntMarketUpFooterElement;
    };
    interface HTMLElementTagNameMap {
        "group-a": HTMLGroupAElement;
        "group-b": HTMLGroupBElement;
        "my-component": HTMLMyComponentElement;
        "s-cnt-market-app": HTMLSCntMarketAppElement;
        "s-cnt-market-choice": HTMLSCntMarketChoiceElement;
        "s-cnt-market-courier": HTMLSCntMarketCourierElement;
        "s-cnt-market-delivery": HTMLSCntMarketDeliveryElement;
        "s-cnt-market-first-page": HTMLSCntMarketFirstPageElement;
        "s-cnt-market-footer": HTMLSCntMarketFooterElement;
        "s-cnt-market-header": HTMLSCntMarketHeaderElement;
        "s-cnt-market-item-offer": HTMLSCntMarketItemOfferElement;
        "s-cnt-market-item-recommended": HTMLSCntMarketItemRecommendedElement;
        "s-cnt-market-item-selection": HTMLSCntMarketItemSelectionElement;
        "s-cnt-market-item-statistics": HTMLSCntMarketItemStatisticsElement;
        "s-cnt-market-modal-window": HTMLSCntMarketModalWindowElement;
        "s-cnt-market-offer": HTMLSCntMarketOfferElement;
        "s-cnt-market-product": HTMLSCntMarketProductElement;
        "s-cnt-market-products-list": HTMLSCntMarketProductsListElement;
        "s-cnt-market-products-list-card": HTMLSCntMarketProductsListCardElement;
        "s-cnt-market-products-list-item": HTMLSCntMarketProductsListItemElement;
        "s-cnt-market-products-slider": HTMLSCntMarketProductsSliderElement;
        "s-cnt-market-products-slider-card": HTMLSCntMarketProductsSliderCardElement;
        "s-cnt-market-promo-slider": HTMLSCntMarketPromoSliderElement;
        "s-cnt-market-promo-slider-card": HTMLSCntMarketPromoSliderCardElement;
        "s-cnt-market-recently-watched": HTMLSCntMarketRecentlyWatchedElement;
        "s-cnt-market-recently-watched-card": HTMLSCntMarketRecentlyWatchedCardElement;
        "s-cnt-market-recommended": HTMLSCntMarketRecommendedElement;
        "s-cnt-market-selection": HTMLSCntMarketSelectionElement;
        "s-cnt-market-shop": HTMLSCntMarketShopElement;
        "s-cnt-market-specialist": HTMLSCntMarketSpecialistElement;
        "s-cnt-market-specification": HTMLSCntMarketSpecificationElement;
        "s-cnt-market-statistics": HTMLSCntMarketStatisticsElement;
        "s-cnt-market-up-footer": HTMLSCntMarketUpFooterElement;
    }
}
declare namespace LocalJSX {
    interface GroupA {
    }
    interface GroupB {
    }
    interface MyComponent {
    }
    interface SCntMarketApp {
        /**
          * Данные для компонента app
         */
        "forApp"?: MarketAppInterface[];
    }
    interface SCntMarketChoice {
        /**
          * Данные для заголовка
         */
        "choiceTitleText"?: string;
        /**
          * Данные для компонента Choice
         */
        "forChoice"?: MarketChoiceInterface[];
    }
    interface SCntMarketCourier {
        /**
          * Данные для компонента Choice
         */
        "forCourier"?: MarketCourierInterface[];
    }
    interface SCntMarketDelivery {
        /**
          * Данные для картинки
         */
        "deliveryImage"?: string;
        /**
          * Данные для заголовка
         */
        "deliveryTitleText"?: string;
        /**
          * Данные для компонента delivery
         */
        "forDelivery"?: MarketDeliveryInterface[];
    }
    interface SCntMarketFirstPage {
    }
    interface SCntMarketFooter {
    }
    interface SCntMarketHeader {
    }
    interface SCntMarketItemOffer {
        /**
          * Данные для компонента Item Offer
         */
        "forOffer"?: MarketOfferInterface;
    }
    interface SCntMarketItemRecommended {
        "MarketRecommendedInterface"?: MarketRecommendedInterface[];
        /**
          * Данные для Item-Recommended
         */
        "getRecommended"?: any;
    }
    interface SCntMarketItemSelection {
        /**
          * Данные для карточек магазинов
         */
        "forSelection"?: MarketSelectionInterface;
    }
    interface SCntMarketItemStatistics {
        /**
          * Данные для компонента Statistics
         */
        "forStatistics"?: MarketStatisticsInterface;
    }
    interface SCntMarketModalWindow {
    }
    interface SCntMarketOffer {
        /**
          * Данные для компонента Offer
         */
        "forOffer"?: MarketOfferInterface[];
        /**
          * Данные для заголовка
         */
        "offerTitleText"?: string;
    }
    interface SCntMarketProduct {
        /**
          * Данные для Product
         */
        "getProduct"?: MarketProductInterface;
    }
    interface SCntMarketProductsList {
        /**
          * Данные для списка товаров
         */
        "productsList"?: MarketProductListInterface[];
    }
    interface SCntMarketProductsListCard {
        /**
          * Данные для списка товаров
         */
        "productsList"?: MarketProductListInterface;
    }
    interface SCntMarketProductsListItem {
        /**
          * Данные для карточки товара
         */
        "productsListCard"?: MarketCardInterface;
    }
    interface SCntMarketProductsSlider {
        /**
          * Данные карточек слайдера популярных продуктов
         */
        "productsSliderCards"?: MarketProductsSliderCardsInterface[];
        /**
          * Заголовк слайдера
         */
        "productsSliderTitle"?: string;
    }
    interface SCntMarketProductsSliderCard {
        /**
          * Получаем данные карточек слайдера популярных продуктов
         */
        "productsSliderCards"?: MarketProductsSliderCardsInterface;
    }
    interface SCntMarketPromoSlider {
        /**
          * Получаем данные карточек промо-слайдера
         */
        "promoSliderCards"?: MarketPromoSliderInterface[];
    }
    interface SCntMarketPromoSliderCard {
        /**
          * Получаем данные карточек промо-слайдера
         */
        "promoSliderCards"?: MarketPromoSliderInterface;
    }
    interface SCntMarketRecentlyWatched {
        /**
          * Данные карточек слайдера просмотренных товаров
         */
        "recentlyWatchedProducts"?: any;
        /**
          * Заголовк раздела
         */
        "recentlyWatchedTitle"?: string;
    }
    interface SCntMarketRecentlyWatchedCard {
        /**
          * Данные карточек слайдера просмотренных товаров
         */
        "recentlyWatchedProducts"?: any;
    }
    interface SCntMarketRecommended {
        /**
          * Данные для Recommended
         */
        "getRecommended"?: MarketRecommendedInterface[];
        "info"?: string;
    }
    interface SCntMarketSelection {
        /**
          * Данные для карточек магазинов
         */
        "forSelection"?: MarketSelectionInterface[];
        /**
          * Данные для главной картинки
         */
        "homePageImage"?: string;
        /**
          * Данные для подзаголовка на картинке
         */
        "homeSubText"?: string;
        /**
          * Данные для заголовка на картинке
         */
        "homeText"?: string;
    }
    interface SCntMarketShop {
    }
    interface SCntMarketSpecialist {
        /**
          * Данные для компонента Specialist
         */
        "forSpecialist"?: MarketSpecialistInterface[];
    }
    interface SCntMarketSpecification {
        /**
          * Интерфейс для Specification
         */
        "MarketSpecificationInterface"?: MarketSpecificationInterface[];
        /**
          * Данные для Specification
         */
        "getSpecification"?: any;
    }
    interface SCntMarketStatistics {
        /**
          * Данные для компонента Statistics
         */
        "forStatistics"?: MarketStatisticsInterface[];
    }
    interface SCntMarketUpFooter {
    }
    interface IntrinsicElements {
        "group-a": GroupA;
        "group-b": GroupB;
        "my-component": MyComponent;
        "s-cnt-market-app": SCntMarketApp;
        "s-cnt-market-choice": SCntMarketChoice;
        "s-cnt-market-courier": SCntMarketCourier;
        "s-cnt-market-delivery": SCntMarketDelivery;
        "s-cnt-market-first-page": SCntMarketFirstPage;
        "s-cnt-market-footer": SCntMarketFooter;
        "s-cnt-market-header": SCntMarketHeader;
        "s-cnt-market-item-offer": SCntMarketItemOffer;
        "s-cnt-market-item-recommended": SCntMarketItemRecommended;
        "s-cnt-market-item-selection": SCntMarketItemSelection;
        "s-cnt-market-item-statistics": SCntMarketItemStatistics;
        "s-cnt-market-modal-window": SCntMarketModalWindow;
        "s-cnt-market-offer": SCntMarketOffer;
        "s-cnt-market-product": SCntMarketProduct;
        "s-cnt-market-products-list": SCntMarketProductsList;
        "s-cnt-market-products-list-card": SCntMarketProductsListCard;
        "s-cnt-market-products-list-item": SCntMarketProductsListItem;
        "s-cnt-market-products-slider": SCntMarketProductsSlider;
        "s-cnt-market-products-slider-card": SCntMarketProductsSliderCard;
        "s-cnt-market-promo-slider": SCntMarketPromoSlider;
        "s-cnt-market-promo-slider-card": SCntMarketPromoSliderCard;
        "s-cnt-market-recently-watched": SCntMarketRecentlyWatched;
        "s-cnt-market-recently-watched-card": SCntMarketRecentlyWatchedCard;
        "s-cnt-market-recommended": SCntMarketRecommended;
        "s-cnt-market-selection": SCntMarketSelection;
        "s-cnt-market-shop": SCntMarketShop;
        "s-cnt-market-specialist": SCntMarketSpecialist;
        "s-cnt-market-specification": SCntMarketSpecification;
        "s-cnt-market-statistics": SCntMarketStatistics;
        "s-cnt-market-up-footer": SCntMarketUpFooter;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "group-a": LocalJSX.GroupA & JSXBase.HTMLAttributes<HTMLGroupAElement>;
            "group-b": LocalJSX.GroupB & JSXBase.HTMLAttributes<HTMLGroupBElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "s-cnt-market-app": LocalJSX.SCntMarketApp & JSXBase.HTMLAttributes<HTMLSCntMarketAppElement>;
            "s-cnt-market-choice": LocalJSX.SCntMarketChoice & JSXBase.HTMLAttributes<HTMLSCntMarketChoiceElement>;
            "s-cnt-market-courier": LocalJSX.SCntMarketCourier & JSXBase.HTMLAttributes<HTMLSCntMarketCourierElement>;
            "s-cnt-market-delivery": LocalJSX.SCntMarketDelivery & JSXBase.HTMLAttributes<HTMLSCntMarketDeliveryElement>;
            "s-cnt-market-first-page": LocalJSX.SCntMarketFirstPage & JSXBase.HTMLAttributes<HTMLSCntMarketFirstPageElement>;
            "s-cnt-market-footer": LocalJSX.SCntMarketFooter & JSXBase.HTMLAttributes<HTMLSCntMarketFooterElement>;
            "s-cnt-market-header": LocalJSX.SCntMarketHeader & JSXBase.HTMLAttributes<HTMLSCntMarketHeaderElement>;
            "s-cnt-market-item-offer": LocalJSX.SCntMarketItemOffer & JSXBase.HTMLAttributes<HTMLSCntMarketItemOfferElement>;
            "s-cnt-market-item-recommended": LocalJSX.SCntMarketItemRecommended & JSXBase.HTMLAttributes<HTMLSCntMarketItemRecommendedElement>;
            "s-cnt-market-item-selection": LocalJSX.SCntMarketItemSelection & JSXBase.HTMLAttributes<HTMLSCntMarketItemSelectionElement>;
            "s-cnt-market-item-statistics": LocalJSX.SCntMarketItemStatistics & JSXBase.HTMLAttributes<HTMLSCntMarketItemStatisticsElement>;
            "s-cnt-market-modal-window": LocalJSX.SCntMarketModalWindow & JSXBase.HTMLAttributes<HTMLSCntMarketModalWindowElement>;
            "s-cnt-market-offer": LocalJSX.SCntMarketOffer & JSXBase.HTMLAttributes<HTMLSCntMarketOfferElement>;
            "s-cnt-market-product": LocalJSX.SCntMarketProduct & JSXBase.HTMLAttributes<HTMLSCntMarketProductElement>;
            "s-cnt-market-products-list": LocalJSX.SCntMarketProductsList & JSXBase.HTMLAttributes<HTMLSCntMarketProductsListElement>;
            "s-cnt-market-products-list-card": LocalJSX.SCntMarketProductsListCard & JSXBase.HTMLAttributes<HTMLSCntMarketProductsListCardElement>;
            "s-cnt-market-products-list-item": LocalJSX.SCntMarketProductsListItem & JSXBase.HTMLAttributes<HTMLSCntMarketProductsListItemElement>;
            "s-cnt-market-products-slider": LocalJSX.SCntMarketProductsSlider & JSXBase.HTMLAttributes<HTMLSCntMarketProductsSliderElement>;
            "s-cnt-market-products-slider-card": LocalJSX.SCntMarketProductsSliderCard & JSXBase.HTMLAttributes<HTMLSCntMarketProductsSliderCardElement>;
            "s-cnt-market-promo-slider": LocalJSX.SCntMarketPromoSlider & JSXBase.HTMLAttributes<HTMLSCntMarketPromoSliderElement>;
            "s-cnt-market-promo-slider-card": LocalJSX.SCntMarketPromoSliderCard & JSXBase.HTMLAttributes<HTMLSCntMarketPromoSliderCardElement>;
            "s-cnt-market-recently-watched": LocalJSX.SCntMarketRecentlyWatched & JSXBase.HTMLAttributes<HTMLSCntMarketRecentlyWatchedElement>;
            "s-cnt-market-recently-watched-card": LocalJSX.SCntMarketRecentlyWatchedCard & JSXBase.HTMLAttributes<HTMLSCntMarketRecentlyWatchedCardElement>;
            "s-cnt-market-recommended": LocalJSX.SCntMarketRecommended & JSXBase.HTMLAttributes<HTMLSCntMarketRecommendedElement>;
            "s-cnt-market-selection": LocalJSX.SCntMarketSelection & JSXBase.HTMLAttributes<HTMLSCntMarketSelectionElement>;
            "s-cnt-market-shop": LocalJSX.SCntMarketShop & JSXBase.HTMLAttributes<HTMLSCntMarketShopElement>;
            "s-cnt-market-specialist": LocalJSX.SCntMarketSpecialist & JSXBase.HTMLAttributes<HTMLSCntMarketSpecialistElement>;
            "s-cnt-market-specification": LocalJSX.SCntMarketSpecification & JSXBase.HTMLAttributes<HTMLSCntMarketSpecificationElement>;
            "s-cnt-market-statistics": LocalJSX.SCntMarketStatistics & JSXBase.HTMLAttributes<HTMLSCntMarketStatisticsElement>;
            "s-cnt-market-up-footer": LocalJSX.SCntMarketUpFooter & JSXBase.HTMLAttributes<HTMLSCntMarketUpFooterElement>;
        }
    }
}
